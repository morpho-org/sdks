export const abi = [
  {
    inputs: [
      {
        internalType: "contract IMetaMorpho[]",
        name: "vaults",
        type: "address[]",
      },
      {
        internalType: "contract IPublicAllocator",
        name: "publicAllocator",
        type: "address",
      },
    ],
    name: "query",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "vault",
                type: "address",
              },
              {
                internalType: "address",
                name: "asset",
                type: "address",
              },
              {
                internalType: "string",
                name: "symbol",
                type: "string",
              },
              { internalType: "string", name: "name", type: "string" },
              {
                internalType: "uint256",
                name: "decimals",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "decimalsOffset",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "bytes1",
                    name: "fields",
                    type: "bytes1",
                  },
                  {
                    internalType: "string",
                    name: "name",
                    type: "string",
                  },
                  {
                    internalType: "string",
                    name: "version",
                    type: "string",
                  },
                  {
                    internalType: "uint256",
                    name: "chainId",
                    type: "uint256",
                  },
                  {
                    internalType: "address",
                    name: "verifyingContract",
                    type: "address",
                  },
                  {
                    internalType: "bytes32",
                    name: "salt",
                    type: "bytes32",
                  },
                  {
                    internalType: "uint256[]",
                    name: "extensions",
                    type: "uint256[]",
                  },
                ],
                internalType: "struct Eip5267Domain",
                name: "eip5267Domain",
                type: "tuple",
              },
            ],
            internalType: "struct VaultConfig",
            name: "config",
            type: "tuple",
          },
          { internalType: "address", name: "owner", type: "address" },
          { internalType: "address", name: "curator", type: "address" },
          {
            internalType: "address",
            name: "guardian",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "timelock",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint192",
                name: "value",
                type: "uint192",
              },
              {
                internalType: "uint64",
                name: "validAt",
                type: "uint64",
              },
            ],
            internalType: "struct PendingUint192",
            name: "pendingTimelock",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "value",
                type: "address",
              },
              {
                internalType: "uint64",
                name: "validAt",
                type: "uint64",
              },
            ],
            internalType: "struct PendingAddress",
            name: "pendingGuardian",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "pendingOwner",
            type: "address",
          },
          { internalType: "uint256", name: "fee", type: "uint256" },
          {
            internalType: "address",
            name: "feeRecipient",
            type: "address",
          },
          {
            internalType: "address",
            name: "skimRecipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "totalSupply",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalAssets",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastTotalAssets",
            type: "uint256",
          },
          {
            internalType: "Id[]",
            name: "supplyQueue",
            type: "bytes32[]",
          },
          {
            internalType: "Id[]",
            name: "withdrawQueue",
            type: "bytes32[]",
          },
          {
            components: [
              {
                internalType: "address",
                name: "admin",
                type: "address",
              },
              { internalType: "uint256", name: "fee", type: "uint256" },
              {
                internalType: "uint256",
                name: "accruedFee",
                type: "uint256",
              },
            ],
            internalType: "struct PublicAllocatorConfig",
            name: "publicAllocatorConfig",
            type: "tuple",
          },
        ],
        internalType: "struct VaultResponse[]",
        name: "res",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export const code =
  "0x608080604052346015576113a9908161001a8239f35b5f80fdfe60806040526004361015610011575f80fd5b5f3560e01c63a67e8cd314610024575f80fd5b346105fc5760403660031901126105fc576004356001600160401b0381116105fc57366023820112156105fc578060040135906001600160401b0382116105fc573660248360051b830101116105fc576024356001600160a01b038116908190036105fc57610094839293611244565b906100a26040519283611223565b828252601f196100b184611244565b015f5b818110611021575050801515935f5b84811015610d59576024600582901b830101356001600160a01b03811691908290036105fc576100f3818661125b565b51916040516338d52e0f60e01b8152602081600481855afa908115610608575f91610d20575b506040516395d89b4160e01b81525f81600481865afa908115610608575f91610d06575b506040516306fdde0360e01b81525f81600481875afa908115610608575f91610ce4575b5060405163313ce56760e01b8152602081600481885afa908115610608575f91610cc6575b50604051632ba9c2b360e21b815291602083600481895afa928315610608575f93610c96575b506040516342580cb760e11b8152935f856004818a5afa948515610608575f95610b4f575b509160ff9392918492604051976101e7896111d2565b89895260018060a01b03166020890152604088015260608701521660808501521660a083015260c08201528352604051638da5cb5b60e01b8152602081600481855afa908115610608575f91610b16575b506001600160a01b031660208481019190915260405163e66f53b760e01b81529081600481855afa908115610608575f91610add575b506001600160a01b031660408481019190915251630229549960e51b8152602081600481855afa908115610608575f91610aa4575b506001600160a01b031660608401526040516334cc866d60e21b8152602081600481855afa908115610608575f91610a73575b50608084015260408051637cc4d9a160e01b81529081600481855afa908115610608575f91610a11575b5060a084015260408051633b1618dd60e11b81529081600481855afa908115610608575f916109b9575b5060c0840152604051631c61872f60e31b8152602081600481855afa908115610608575f91610980575b506001600160a01b031660e084015260405163ddca3f4360e01b8152602081600481855afa8015610608575f90610938575b6001600160601b03166101008501525060405163011a412160e61b8152602081600481855afa908115610608575f916108ff575b506001600160a01b031661012084015260405163388af5b560e01b8152602081600481855afa908115610608575f916108c6575b506001600160a01b03166101408401526040516318160ddd60e01b8152602081600481855afa908115610608575f91610895575b506101608401526040516278744560e21b8152602081600481855afa908115610608575f91610864575b5061018084015260405163568efc0760e01b8152602081600481855afa908115610608575f91610833575b506101a0840152604051630a17b31360e41b8152602081600481855afa908115610608575f91610802575b506104ac81611341565b6101c085019081525f5b82811061078f5750506040516333f91ebb60e01b81529050602081600481855afa908115610608575f9161075e575b506104ef81611341565b6101e085019081525f5b8281106106eb57505050878061067f575b61051a575b5060019150016100c3565b604051630c7508df60e31b81526004810182905290602082602481895afa918215610608575f92610644575b50604051636fcca69b60e01b8152600481018290526020816024818a5afa908115610608575f91610613575b50604051916348d88a5960e11b835260048301526020826024818a5afa918215610608575f926105ce575b509361020091600195604051946105b3866111ed565b878060a01b031685526020850152604084015201525f61050f565b9150936020823d8211610600575b816105e960209383611223565b810103126105fc5790519093600161059d565b5f80fd5b3d91506105dc565b6040513d5f823e3d90fd5b90506020813d821161063c575b8161062d60209383611223565b810103126105fc57515f610572565b3d9150610620565b9091506020813d8211610677575b8161065f60209383611223565b810103126105fc5761067090611283565b905f610546565b3d9150610652565b506040516326f6f90760e11b815260048101869052602081602481855afa908115610608575f916106b1575b5061050a565b90506020813d82116106e3575b816106cb60209383611223565b810103126105fc575180151581036105fc575f6106ab565b3d91506106be565b6040516362518ddf60e01b81526004810182905290602082602481885afa8015610608575f9061072c575b6001925061072582855161125b565b52016104f9565b506020823d8211610756575b8161074560209383611223565b810103126105fc5760019151610716565b3d9150610738565b90506020813d8211610787575b8161077860209383611223565b810103126105fc57515f6104e5565b3d915061076b565b60405163f7d1852160e01b81526004810182905290602082602481885afa8015610608575f906107d0575b600192506107c982855161125b565b52016104b6565b506020823d82116107fa575b816107e960209383611223565b810103126105fc57600191516107ba565b3d91506107dc565b90506020813d821161082b575b8161081c60209383611223565b810103126105fc57515f6104a2565b3d915061080f565b90506020813d821161085c575b8161084d60209383611223565b810103126105fc57515f610477565b3d9150610840565b90506020813d821161088d575b8161087e60209383611223565b810103126105fc57515f61044c565b3d9150610871565b90506020813d82116108be575b816108af60209383611223565b810103126105fc57515f610422565b3d91506108a2565b90506020813d82116108f7575b816108e060209383611223565b810103126105fc576108f190611283565b5f6103ee565b3d91506108d3565b90506020813d8211610930575b8161091960209383611223565b810103126105fc5761092a90611283565b5f6103ba565b3d915061090c565b506020813d8211610978575b8161095160209383611223565b810103126105fc57516001600160601b03811681036105fc576001600160601b0390610386565b3d9150610944565b90506020813d82116109b1575b8161099a60209383611223565b810103126105fc576109ab90611283565b5f610354565b3d915061098d565b90506040813d8211610a09575b816109d360409383611223565b810103126105fc576109fe6020604051926109ed84611208565b6109f681611283565b84520161132d565b60208201525f61032a565b3d91506109c6565b90506040813d8211610a6b575b81610a2b60409383611223565b810103126105fc5760405190610a4082611208565b80516001600160c01b03811681036105fc578252610a609060200161132d565b60208201525f610300565b3d9150610a1e565b90506020813d8211610a9c575b81610a8d60209383611223565b810103126105fc57515f6102d6565b3d9150610a80565b90506020813d8211610ad5575b81610abe60209383611223565b810103126105fc57610acf90611283565b5f6102a3565b3d9150610ab1565b90506020813d8211610b0e575b81610af760209383611223565b810103126105fc57610b0890611283565b5f61026e565b3d9150610aea565b90506020813d8211610b47575b81610b3060209383611223565b810103126105fc57610b4190611283565b5f610238565b3d9150610b23565b9094503d805f833e610b618183611223565b8101906020818303126105fc578051906001600160401b0382116105fc57019060e0828203126105fc5760405191610b98836111d2565b80516001600160f81b0319811681036105fc57835260208101516001600160401b0381116105fc5782610bcc918301611297565b602084015260408101516001600160401b0381116105fc5782610bf0918301611297565b604084015260608101516060840152610c0b60808201611283565b608084015260a081015160a084015260c0810151906001600160401b0382116105fc57019080601f830112156105fc578151610c4681611244565b92610c546040519485611223565b81845260208085019260051b8201019283116105fc57602001905b828210610c865750505060c08201529360ff6101d1565b8151815260209182019101610c6f565b610cb891935060203d8111610cbf575b610cb08183611223565b810190611314565b915f6101ac565b503d610ca6565b610cde915060203d8111610cbf57610cb08183611223565b5f610186565b610d0091503d805f833e610cf88183611223565b8101906112ec565b5f610161565b610d1a91503d805f833e610cf88183611223565b5f61013d565b90506020813d8211610d51575b81610d3a60209383611223565b810103126105fc57610d4b90611283565b5f610119565b3d9150610d2d565b836040518091602082016020835281518091526040830190602060408260051b8601019301915f905b828210610d9157505050500390f35b919390929450603f1986820301825284519081516102a0825260018060a01b038151166102a083015260018060a01b036020820151166102c083015260c0610e05610ded604084015160e06102e087015261038086019061117b565b606084015185820361029f190161030087015261117b565b91608081015161032085015260a0810151610340850152015161029f198383030161036084015260ff60f81b815116825260c0610e66610e54602084015160e0602087015260e086019061117b565b6040840151858203604087015261117b565b916060810151606085015260018060a01b03608082015116608085015260a081015160a085015201519160c0818303910152602080835192838152019201905f905b808210611009575050506001926020926102806040610200610fd8610fc488978a8060a01b038989015116898801528a8060a01b038589015116858801528a8060a01b036060890151166060880152608088015160808801526001600160401b038960a08a01518d8060c01b0381511660a08b015201511660c08801526001600160401b038960c08a01518d8060a01b0381511660e08b01520151166101008801528a8060a01b0360e0890151166101208801526101008801516101408801528a8060a01b03610120890151166101608801528a8060a01b03610140890151166101808801526101608801516101a08801526101808801516101c08801526101a08801516101e08801526101c08801518782038589015261119f565b6101e087015186820361022088015261119f565b940151878060a01b038151166102408501528581015161026085015201519101529601920192018594939192610d82565b90919260208060019286518152019401920190610ea8565b604095949551906102208201918083106001600160401b0384111761116757602092604052604051611052816111d2565b5f81525f84820152606060408201526060808201525f60808201525f60a082015260405161107f816111d2565b5f8152606085820152606060408201525f60608201525f60808201525f60a0820152606060c082015260c082015281525f838201525f60408201525f60608201525f60808201526040516110d281611208565b5f81525f8482015260a08201526040516110eb81611208565b5f81525f8482015260c08201525f60e08201525f6101008201525f6101208201525f6101408201525f6101608201525f6101808201525f6101a082015260606101c082015260606101e0820152604051611144816111ed565b5f81525f848201525f6040820152610200820152828287010152019493946100b4565b634e487b7160e01b5f52604160045260245ffd5b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b90602080835192838152019201905f5b8181106111bc5750505090565b82518452602093840193909201916001016111af565b60e081019081106001600160401b0382111761116757604052565b606081019081106001600160401b0382111761116757604052565b604081019081106001600160401b0382111761116757604052565b90601f801991011681019081106001600160401b0382111761116757604052565b6001600160401b0381116111675760051b60200190565b805182101561126f5760209160051b010190565b634e487b7160e01b5f52603260045260245ffd5b51906001600160a01b03821682036105fc57565b81601f820112156105fc578051906001600160401b03821161116757604051926112cb601f8401601f191660200185611223565b828452602083830101116105fc57815f9260208093018386015e8301015290565b906020828203126105fc5781516001600160401b0381116105fc576113119201611297565b90565b908160209103126105fc575160ff811681036105fc5790565b51906001600160401b03821682036105fc57565b9061134b82611244565b6113586040519182611223565b8281528092611369601f1991611244565b019060203691013756fea2646970667358221220af88938c1cc9fd67941ca266daceb68c36c951ba8b8afdda33ec5b31f63f070f64736f6c634300081b0033";
