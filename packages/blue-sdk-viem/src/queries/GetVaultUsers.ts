export const abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract IMetaMorpho",
            name: "vault",
            type: "address",
          },
          { internalType: "address", name: "user", type: "address" },
        ],
        internalType: "struct VaultUserRequest[]",
        name: "reqs",
        type: "tuple[]",
      },
    ],
    name: "query",
    outputs: [
      {
        components: [
          { internalType: "bool", name: "isAllocator", type: "bool" },
          {
            internalType: "uint256",
            name: "allowance",
            type: "uint256",
          },
        ],
        internalType: "struct VaultUserResponse[]",
        name: "res",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export const code =
  "0x608080604052346015576103d6908161001a8239f35b5f80fdfe60806040526004361015610011575f80fd5b5f3560e01c63a5a2deb814610024575f80fd5b346102125760203660031901126102125760043567ffffffffffffffff8111610212573660238201121561021257806004013567ffffffffffffffff8111610212573660248260061b840101116102125761007e81610388565b9161008c6040519384610366565b818352601f1961009b83610388565b015f5b8181106103135750505f5b828110156102c0578060061b8201906040602319833603011261021257604051916100d383610336565b6024810135906001600160a01b03821682036102125790835260440135916001600160a01b0383168303610212576020810192835285518210156102ac576020600583901b8701810151825185516040516326f6f90760e11b81526001600160a01b039182166004820152969294939187916024918391165afa801561021e575f9061026f575b1515835281516040516338d52e0f60e01b81529550602090869060049082906001600160a01b03165afa94851561021e575f95610229575b50519051604051636eb1769f60e11b81526001600160a01b03928316600482015290821660248201529360209185916044918391165afa92831561021e575f936101e6575b509160206001930152016100a9565b92506020833d8211610216575b8161020060209383610366565b810103126102125791519160206101d7565b5f80fd5b3d91506101f3565b6040513d5f823e3d90fd5b9094506020813d8211610267575b8161024460209383610366565b810103126102125751906001600160a01b03821682036102125790936044610192565b3d9150610237565b50936020813d82116102a4575b8161028960209383610366565b8101031261021257519384151585036102125760049461015a565b3d915061027c565b634e487b7160e01b5f52603260045260245ffd5b836040518091602082016020835281518091526020604084019201905f5b8181106102ec575050500390f35b825180511515855260209081015181860152869550604090940193909201916001016102de565b60209060405161032281610336565b5f81525f838201528282880101520161009e565b6040810190811067ffffffffffffffff82111761035257604052565b634e487b7160e01b5f52604160045260245ffd5b90601f8019910116810190811067ffffffffffffffff82111761035257604052565b67ffffffffffffffff81116103525760051b6020019056fea2646970667358221220f15a4ee70c113b3be1fa5fbb5bfd4f698337f8f8dcedb08785d65792fab3641864736f6c634300081b0033";
