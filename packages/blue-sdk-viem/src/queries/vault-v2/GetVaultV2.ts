export const abi = [
  {
    inputs: [
      {
        internalType: "contract IVaultV2",
        name: "vault",
        type: "address",
      },
      {
        internalType: "contract IMorphoVaultV1AdapterFactory",
        name: "morphoVaultV1AdapterFactory",
        type: "address",
      },
    ],
    name: "query",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "asset",
                type: "address",
              },
              {
                internalType: "string",
                name: "symbol",
                type: "string",
              },
              { internalType: "string", name: "name", type: "string" },
              {
                internalType: "uint256",
                name: "decimals",
                type: "uint256",
              },
            ],
            internalType: "struct Token",
            name: "token",
            type: "tuple",
          },
          { internalType: "address", name: "asset", type: "address" },
          {
            internalType: "uint256",
            name: "totalAssets",
            type: "uint256",
          },
          {
            internalType: "uint128",
            name: "_totalAssets",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "totalSupply",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "virtualShares",
            type: "uint256",
          },
          { internalType: "uint64", name: "maxRate", type: "uint64" },
          {
            internalType: "uint64",
            name: "lastUpdate",
            type: "uint64",
          },
          {
            internalType: "address[]",
            name: "adapters",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "liquidityAdapter",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "liquidityData",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "isLiquidityAdapterKnown",
            type: "bool",
          },
          {
            components: [
              { internalType: "bytes32", name: "id", type: "bytes32" },
              {
                internalType: "uint256",
                name: "absoluteCap",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "relativeCap",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "allocation",
                type: "uint256",
              },
            ],
            internalType: "struct VaultV2Allocation[]",
            name: "liquidityAllocations",
            type: "tuple[]",
          },
          {
            internalType: "uint96",
            name: "performanceFee",
            type: "uint96",
          },
          {
            internalType: "uint96",
            name: "managementFee",
            type: "uint96",
          },
          {
            internalType: "address",
            name: "performanceFeeRecipient",
            type: "address",
          },
          {
            internalType: "address",
            name: "managementFeeRecipient",
            type: "address",
          },
        ],
        internalType: "struct VaultV2Response",
        name: "res",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export const code =
  "0x60808060405234601557610f72908161001a8239f35b5f80fdfe60806040526004361015610011575f80fd5b5f3560e01c63f6f030ce14610024575f80fd5b34610861576040366003190112610861576004356001600160a01b0381168103610861576024356001600160a01b0381168103610861576102a060405260405161006d81610dd3565b5f80825260606020808401829052604080850183905282850184905260809490945260a083905260c083905260e08390526101008390526101208390526101408390526101608390526101808290526101a08390526101c08290526101e0839052610200919091526102208290526102408290526102608290526102809190915290516338d52e0f60e01b815290816004816001600160a01b0387165afa90811561086d575f91610d7c575b506040516395d89b4160e01b81525f816004816001600160a01b0388165afa90811561086d575f91610d62575b506040516306fdde0360e01b8152905f826004816001600160a01b0389165afa91821561086d575f92610d3e575b5060405163313ce56760e01b8152916020836004816001600160a01b038a165afa91821561086d575f92610cfd575b60ff9350604051946101b486610dd3565b60018060a01b03168552602085015260408401521660608201526080526040516338d52e0f60e01b815260208160048160018060a01b0387165afa90811561086d575f91610cde575b506001600160a01b0390811660a0526040516278744560e21b8152906020908290600490829087165afa90811561086d575f91610cac575b5060c05260405163ce04bebb60e01b81526020816004816001600160a01b0387165afa801561086d575f90610c63575b6001600160801b031660e052506040516318160ddd60e01b81526020816004816001600160a01b0387165afa90811561086d575f91610c31575b50610100526040516331c6651b60e21b81526020816004816001600160a01b0387165afa90811561086d575f91610bff575b506101205260405163ece1d6e560e01b81526020816004816001600160a01b0387165afa801561086d5767ffffffffffffffff915f91610be0575b50166101405260405163c046371160e01b81526020816004816001600160a01b0387165afa801561086d5767ffffffffffffffff915f91610bb1575b50166101605260405163ad468d1160e01b81526020816004816001600160a01b0387165afa90811561086d575f91610b92575b506001600160a01b039081166101a0526040516305c0524560e31b8152905f908290600490829087165afa90811561086d575f91610b39575b506101c0526040516343bc43c160e11b81526020816004816001600160a01b0387165afa801561086d576001600160601b03915f91610b1a575b50166102205260405163537bfaeb60e11b81526020816004816001600160a01b0387165afa801561086d576001600160601b03915f91610aeb575b50166102405260405163ed27f7c960e01b81526020816004816001600160a01b0387165afa90811561086d575f91610acc575b506001600160a01b03908116610260526040516306d9a30160e41b8152906020908290600490829087165afa90811561086d575f91610aad575b506001600160a01b0390811661028052604051630b54457960e31b8152906020908290600490829087165afa90811561086d575f91610a7b575b506104da81610eef565b6104e76040519182610def565b818152601f196104f683610eef565b01366020830137610180525f5b8181106109f55750506101a051604051632c77566560e01b81526001600160a01b0391821660048201529160209183916024918391165afa90811561086d575f916109ba575b506108da575b61020051515f5b818110610766576040516020815280608051610220602083015260018060a01b0381511661024083015260606105b86105a0602084015160806102608701526102c0860190610daf565b604084015185820361023f1901610280870152610daf565b9101516102a083015260018060a01b0360206080015116604083015260406080015160608301526001600160801b03606060800151166080830152608080015160a083015260a06080015160c083015267ffffffffffffffff60c0608001511660e083015267ffffffffffffffff60e060800151166101008301526101006080015190601f1983820301610120840152602080835192838152019201905f5b8181106107445750506101a0516001600160a01b0316610140840152506101c051828203601f190161016084015261068f9190610daf565b6101e051151561018083015261020051828203601f19016101a08401528051808352602092830192909101905f5b81811061070a57505061022080516001600160601b039081166101c086015261024051166101e0850152610260516001600160a01b03908116610200860152610280511690840152500390f35b91935091602060806001926060875180518352848101518584015260408101516040840152015160608201520194019101918493926106bd565b82516001600160a01b0316845285945060209384019390920191600101610657565b6107768161018060800151610f28565b518051604051632f0374dd60e21b815260048101919091529091906020816024816001600160a01b0389165afa90811561086d575f916108a9575b50602083015281516040519063a68bafa360e01b8252600482015260208160248160018060a01b0389165afa90811561086d575f91610878575b5060408301528151916040519263c69507dd60e01b8452600484015260208360248160018060a01b0389165afa92831561086d575f93610835575b50916060600193015201610556565b92506020833d8211610865575b8161084f60209383610def565b81010312610861579151916060610826565b5f80fd5b3d9150610842565b6040513d5f823e3d90fd5b90506020813d82116108a1575b8161089260209383610def565b8101031261086157515f6107eb565b3d9150610885565b90506020813d82116108d2575b816108c360209383610def565b8101031261086157515f6107b1565b3d91506108b6565b60016101e0526040805191906108f08184610def565b60018352601f1981015f5b81811061098d5750506109879192610180608001525f60018060a01b0361012060800151168251602081019184835260046060830152637468697360e01b6080830152848201526080815261095160a082610def565b5190209180519261096184610dd3565b8352602083018290528201525f6060820152610200519061098182610f07565b52610f07565b5061054f565b602090835161099b81610dd3565b5f81525f838201525f858201525f6060820152828288010152016108fb565b90506020813d6020116109ed575b816109d560209383610def565b8101031261086157518015158103610861575f610549565b3d91506109c8565b6040516313bd406b60e21b815260048101829052906020826024816001600160a01b0389165afa801561086d576001925f91610a4d575b50610a3d8261010060800151610f28565b90838060a01b0316905201610503565b610a6e915060203d8111610a74575b610a668183610def565b810190610e11565b5f610a2c565b503d610a5c565b90506020813d602011610aa5575b81610a9660209383610def565b8101031261086157515f6104d0565b3d9150610a89565b610ac6915060203d602011610a7457610a668183610def565b5f610496565b610ae5915060203d602011610a7457610a668183610def565b5f61045c565b610b0d915060203d602011610b13575b610b058183610def565b810190610ed0565b5f610429565b503d610afb565b610b33915060203d602011610b1357610b058183610def565b5f6103ee565b3d9150815f823e610b4a8282610def565b60208183810103126108615780519067ffffffffffffffff821161086157828101601f838301011215610861576020610b8c9382019280830151920101610e30565b5f6103b4565b610bab915060203d602011610a7457610a668183610def565b5f61037b565b610bd3915060203d602011610bd9575b610bcb8183610def565b810190610eb0565b5f610348565b503d610bc1565b610bf9915060203d602011610bd957610bcb8183610def565b5f61030c565b90506020813d602011610c29575b81610c1a60209383610def565b8101031261086157515f6102d1565b3d9150610c0d565b90506020813d602011610c5b575b81610c4c60209383610def565b8101031261086157515f61029f565b3d9150610c3f565b506020813d602011610ca4575b81610c7d60209383610def565b8101031261086157516001600160801b0381168103610861576001600160801b0390610265565b3d9150610c70565b90506020813d602011610cd6575b81610cc760209383610def565b8101031261086157515f610235565b3d9150610cba565b610cf7915060203d602011610a7457610a668183610def565b5f6101fd565b9150916020813d602011610d36575b81610d1960209383610def565b8101031261086157519160ff831683036108615760ff92916101a3565b3d9150610d0c565b610d5b9192503d805f833e610d538183610def565b810190610e76565b905f610174565b610d7691503d805f833e610d538183610def565b5f610146565b610d95915060203d602011610a7457610a668183610def565b5f610119565b634e487b7160e01b5f52604160045260245ffd5b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b6080810190811067ffffffffffffffff821117610d9b57604052565b90601f8019910116810190811067ffffffffffffffff821117610d9b57604052565b9081602091031261086157516001600160a01b03811681036108615790565b92919267ffffffffffffffff8211610d9b5760405191610e5a601f8201601f191660200184610def565b829481845281830111610861578281602093845f96015e010152565b6020818303126108615780519067ffffffffffffffff821161086157019080601f83011215610861578151610ead92602001610e30565b90565b90816020910312610861575167ffffffffffffffff811681036108615790565b9081602091031261086157516001600160601b03811681036108615790565b67ffffffffffffffff8111610d9b5760051b60200190565b805115610f145760200190565b634e487b7160e01b5f52603260045260245ffd5b8051821015610f145760209160051b01019056fea2646970667358221220e45367a157f9ab8ece06c6677e5f948657d19add613effac28b5bb2d6ba7df5864736f6c634300081b0033";
