export const abi = [
  {
    inputs: [
      {
        internalType: "contract IVaultV2",
        name: "vault",
        type: "address",
      },
    ],
    name: "query",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "asset",
                type: "address",
              },
              {
                internalType: "string",
                name: "symbol",
                type: "string",
              },
              { internalType: "string", name: "name", type: "string" },
              {
                internalType: "uint256",
                name: "decimals",
                type: "uint256",
              },
            ],
            internalType: "struct Token",
            name: "token",
            type: "tuple",
          },
          { internalType: "address", name: "asset", type: "address" },
          {
            internalType: "uint256",
            name: "totalAssets",
            type: "uint256",
          },
          {
            internalType: "uint128",
            name: "_totalAssets",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "totalSupply",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "virtualShares",
            type: "uint256",
          },
          { internalType: "uint64", name: "maxRate", type: "uint64" },
          {
            internalType: "uint64",
            name: "lastUpdate",
            type: "uint64",
          },
          {
            internalType: "address[]",
            name: "adapters",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "liquidityAdapter",
            type: "address",
          },
          {
            internalType: "uint96",
            name: "performanceFee",
            type: "uint96",
          },
          {
            internalType: "uint96",
            name: "managementFee",
            type: "uint96",
          },
          {
            internalType: "address",
            name: "performanceFeeRecipient",
            type: "address",
          },
          {
            internalType: "address",
            name: "managementFeeRecipient",
            type: "address",
          },
        ],
        internalType: "struct VaultV2Response",
        name: "res",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export const code =
  "0x60808060405234601557610b37908161001a8239f35b5f80fdfe60806040526004361015610011575f80fd5b5f3560e01c63d4fc9fc614610024575f80fd5b34610701576020366003190112610701576004356001600160a01b03811681036107015761024060405260405161005a816109da565b5f80825260606020808401829052604080850183905282850184905260809490945260a083905260c083905260e0839052610100839052610120839052610140839052610160839052610180919091526101a08290526101c08290526101e08290526102008290526102209190915290516338d52e0f60e01b815290816004816001600160a01b0386165afa9081156106cc575f91610983575b506040516395d89b4160e01b81525f816004816001600160a01b0387165afa9081156106cc575f91610969575b506040516306fdde0360e01b8152905f826004816001600160a01b0388165afa9182156106cc575f92610945575b5060405163313ce56760e01b8152916020836004816001600160a01b0389165afa9182156106cc575f92610904575b60ff93506040519461018f866109da565b60018060a01b03168552602085015260408401521660608201526080526040516338d52e0f60e01b815260208160048160018060a01b0386165afa9081156106cc575f916108e5575b506001600160a01b0390811660a0526040516278744560e21b8152906020908290600490829086165afa9081156106cc575f916108b3575b5060c05260405163ce04bebb60e01b81526020816004816001600160a01b0386165afa80156106cc575f9061086a575b6001600160801b031660e052506040516318160ddd60e01b81526020816004816001600160a01b0386165afa9081156106cc575f91610838575b50610100526040516331c6651b60e21b81526020816004816001600160a01b0386165afa9081156106cc575f91610806575b506101205260405163ece1d6e560e01b81526020816004816001600160a01b0386165afa80156106cc5767ffffffffffffffff915f916107e7575b50166101405260405163c046371160e01b81526020816004816001600160a01b0386165afa80156106cc5767ffffffffffffffff915f916107b8575b50166101605260405163ad468d1160e01b81526020816004816001600160a01b0386165afa9081156106cc575f91610799575b506001600160a01b039081166101a0526040516343bc43c160e11b8152906020908290600490829086165afa80156106cc576001600160601b03915f9161077a575b50166101c05260405163537bfaeb60e11b81526020816004816001600160a01b0386165afa80156106cc576001600160601b03915f9161074b575b50166101e05260405163ed27f7c960e01b81526020816004816001600160a01b0386165afa9081156106cc575f9161072c575b506001600160a01b03908116610200526040516306d9a30160e41b8152906020908290600490829086165afa9081156106cc575f9161070d575b506001600160a01b0390811661022052604051630b54457960e31b8152906020908290600490829086165afa9081156106cc575f916106d7575b5061048481610ae9565b61049160405191826109f6565b818152601f196104a083610ae9565b01366020830137610180525f5b81811061062b5760405160208152806080516101c0602083015260018060a01b038151166101e0830152606061050f6104f7602084015160806102008701526102608601906109b6565b60408401518582036101df19016102208701526109b6565b91015161024083015260018060a01b0360206080015116604083015260406080015160608301526001600160801b03606060800151166080830152608080015160a083015260a06080015160c083015267ffffffffffffffff60c0608001511660e083015267ffffffffffffffff60e060800151166101008301526101006080015190601f1983820301610120840152602080835192838152019201905f5b8181106106095750506101a080516001600160a01b039081166101408601526101c080516001600160601b039081166101608801526101e0511661018087015261020051821692860192909252610220511690840152500390f35b82516001600160a01b03168452859450602093840193909201916001016105ae565b6040516313bd406b60e21b815260048101829052906020826024816001600160a01b0388165afa9182156106cc575f9261069c575b50610180518051821015610688576020600193848060a01b0316918360051b010152016104ad565b634e487b7160e01b5f52603260045260245ffd5b6106be91925060203d81116106c5575b6106b681836109f6565b810190610a18565b905f610660565b503d6106ac565b6040513d5f823e3d90fd5b90506020813d602011610705575b816106f2602093836109f6565b8101031261070157515f61047a565b5f80fd5b3d91506106e5565b610726915060203d6020116106c5576106b681836109f6565b5f610440565b610745915060203d6020116106c5576106b681836109f6565b5f610406565b61076d915060203d602011610773575b61076581836109f6565b810190610aca565b5f6103d3565b503d61075b565b610793915060203d6020116107735761076581836109f6565b5f610398565b6107b2915060203d6020116106c5576106b681836109f6565b5f610356565b6107da915060203d6020116107e0575b6107d281836109f6565b810190610aaa565b5f610323565b503d6107c8565b610800915060203d6020116107e0576107d281836109f6565b5f6102e7565b90506020813d602011610830575b81610821602093836109f6565b8101031261070157515f6102ac565b3d9150610814565b90506020813d602011610862575b81610853602093836109f6565b8101031261070157515f61027a565b3d9150610846565b506020813d6020116108ab575b81610884602093836109f6565b8101031261070157516001600160801b0381168103610701576001600160801b0390610240565b3d9150610877565b90506020813d6020116108dd575b816108ce602093836109f6565b8101031261070157515f610210565b3d91506108c1565b6108fe915060203d6020116106c5576106b681836109f6565b5f6101d8565b9150916020813d60201161093d575b81610920602093836109f6565b8101031261070157519160ff831683036107015760ff929161017e565b3d9150610913565b6109629192503d805f833e61095a81836109f6565b810190610a37565b905f61014f565b61097d91503d805f833e61095a81836109f6565b5f610121565b61099c915060203d6020116106c5576106b681836109f6565b5f6100f4565b634e487b7160e01b5f52604160045260245ffd5b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b6080810190811067ffffffffffffffff8211176109a257604052565b90601f8019910116810190811067ffffffffffffffff8211176109a257604052565b9081602091031261070157516001600160a01b03811681036107015790565b6020818303126107015780519067ffffffffffffffff8211610701570181601f820112156107015780519067ffffffffffffffff82116109a25760405192610a89601f8401601f1916602001856109f6565b8284526020838301011161070157815f9260208093018386015e8301015290565b90816020910312610701575167ffffffffffffffff811681036107015790565b9081602091031261070157516001600160601b03811681036107015790565b67ffffffffffffffff81116109a25760051b6020019056fea26469706673582212206a874ff874124b7ffa37a4a8f72146b50d79cd7fe08586991dc9115350566a7c64736f6c634300081b0033";
