export const abi = [
  {
    inputs: [
      {
        internalType: "contract IVaultV2",
        name: "vault",
        type: "address",
      },
      {
        internalType: "contract IMorphoVaultV1AdapterFactory",
        name: "morphoVaultV1AdapterFactory",
        type: "address",
      },
    ],
    name: "query",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "asset",
                type: "address",
              },
              {
                internalType: "string",
                name: "symbol",
                type: "string",
              },
              { internalType: "string", name: "name", type: "string" },
              {
                internalType: "uint256",
                name: "decimals",
                type: "uint256",
              },
            ],
            internalType: "struct Token",
            name: "token",
            type: "tuple",
          },
          { internalType: "address", name: "asset", type: "address" },
          {
            internalType: "uint256",
            name: "totalAssets",
            type: "uint256",
          },
          {
            internalType: "uint128",
            name: "_totalAssets",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "totalSupply",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "virtualShares",
            type: "uint256",
          },
          { internalType: "uint64", name: "maxRate", type: "uint64" },
          {
            internalType: "uint64",
            name: "lastUpdate",
            type: "uint64",
          },
          {
            internalType: "address[]",
            name: "adapters",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "liquidityAdapter",
            type: "address",
          },
          {
            internalType: "bool",
            name: "isLiquidityAdapterKnown",
            type: "bool",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "allocation",
                type: "uint256",
              },
              {
                internalType: "uint128",
                name: "absoluteCap",
                type: "uint128",
              },
              {
                internalType: "uint128",
                name: "relativeCap",
                type: "uint128",
              },
            ],
            internalType: "struct Caps",
            name: "liquidityCaps",
            type: "tuple",
          },
          {
            internalType: "uint96",
            name: "performanceFee",
            type: "uint96",
          },
          {
            internalType: "uint96",
            name: "managementFee",
            type: "uint96",
          },
          {
            internalType: "address",
            name: "performanceFeeRecipient",
            type: "address",
          },
          {
            internalType: "address",
            name: "managementFeeRecipient",
            type: "address",
          },
        ],
        internalType: "struct VaultV2Response",
        name: "res",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export const code =
  "0x60808060405234601557610e0c908161001a8239f35b5f80fdfe60806040526004361015610011575f80fd5b5f3560e01c63f6f030ce14610024575f80fd5b34610838576040366003190112610838576004356001600160a01b0381168103610838576024356001600160a01b03811681036108385761028060405260405161006d81610c93565b5f808252606060208301819052604080840182905281840183905260809390935260a082905260c082905260e0829052610100829052610120829052610140829052610160829052610180526101a08190526101c052516100cd81610caf565b5f808252602080830182905260408084018390526101e0939093526102008290526102208290526102408290526102609190915290516338d52e0f60e01b815290816004816001600160a01b0387165afa908115610844575f91610c3c575b506040516395d89b4160e01b81525f816004816001600160a01b0388165afa908115610844575f91610c22575b506040516306fdde0360e01b8152905f826004816001600160a01b0389165afa918215610844575f92610bfe575b5060405163313ce56760e01b8152916020836004816001600160a01b038a165afa918215610844575f92610bbd575b60ff9350604051946101c786610c93565b60018060a01b03168552602085015260408401521660608201526080526040516338d52e0f60e01b815260208160048160018060a01b0387165afa908115610844575f91610b9e575b506001600160a01b0390811660a0526040516278744560e21b8152906020908290600490829087165afa908115610844575f91610b6c575b5060c05260405163ce04bebb60e01b81526020816004816001600160a01b0387165afa8015610844575f90610b23575b6001600160801b031660e052506040516318160ddd60e01b81526020816004816001600160a01b0387165afa908115610844575f91610af1575b50610100526040516331c6651b60e21b81526020816004816001600160a01b0387165afa908115610844575f91610abf575b506101205260405163ece1d6e560e01b81526020816004816001600160a01b0387165afa80156108445767ffffffffffffffff915f91610aa0575b50166101405260405163c046371160e01b81526020816004816001600160a01b0387165afa80156108445767ffffffffffffffff915f91610a71575b50166101605260405163ad468d1160e01b81526020816004816001600160a01b0387165afa908115610844575f91610a52575b506001600160a01b039081166101a0526040516343bc43c160e11b8152906020908290600490829087165afa8015610844576001600160601b03915f91610a33575b50166102005260405163537bfaeb60e11b81526020816004816001600160a01b0387165afa8015610844576001600160601b03915f91610a04575b50166102205260405163ed27f7c960e01b81526020816004816001600160a01b0387165afa908115610844575f916109e5575b506001600160a01b03908116610240526040516306d9a30160e41b8152906020908290600490829087165afa908115610844575f916109c6575b506001600160a01b0390811661026052604051630b54457960e31b8152906020908290600490829087165afa908115610844575f91610994575b506104bc81610dbe565b6104c96040519182610ccb565b818152601f196104d883610dbe565b01366020830137610180525f5b8181106108f357604051632c77566560e01b81526001600160a01b0380861660048301528591906020908290602490829089165afa908115610844575f916108b8575b506106e5575b506040516020815280608051610240602083015260018060a01b03815116610260830152606061058a610572602084015160806102808701526102e0860190610c6f565b604084015185820361025f19016102a0870152610c6f565b9101516102c083015260018060a01b0360206080015116604083015260406080015160608301526001600160801b03606060800151166080830152608080015160a083015260a06080015160c083015267ffffffffffffffff60c0608001511660e083015267ffffffffffffffff60e060800151166101008301526101006080015190601f1983820301610120840152602080835192838152019201905f5b8181106106c35750506101a080516001600160a01b039081166101408601526101c0805115156101608701526101e08051805161018089015260208101516001600160801b0390811695890195909552604001519093169086015261020080516001600160601b03908116938701939093526102208051909316908601526102408051821692860192909252610260511690840152500390f35b82516001600160a01b0316845285945060209384019390920191600101610629565b60016101406080015260405160208101906040825260046060820152637468697360e01b608082015260018060a01b03831660408201526080815261072b60a082610ccb565b519020604051632f0374dd60e21b81526004810182905291906020836024816001600160a01b0386165afa928315610844575f93610884575b5060405163a68bafa360e01b815260048101829052906020826024816001600160a01b0387165afa918215610844575f9261084f575b5060405163c69507dd60e01b8152600481019190915291602090839060249082906001600160a01b03165afa918215610844575f92610805575b506001600160801b03809293604051946107ed86610caf565b85521660208401521660408201526101e0528061052e565b91506020823d60201161083c575b8161082060209383610ccb565b81010312610838579051906001600160801b036107d4565b5f80fd5b3d9150610813565b6040513d5f823e3d90fd5b9091506020813d60201161087c575b8161086b60209383610ccb565b81010312610838575190602061079a565b3d915061085e565b9092506020813d6020116108b0575b816108a060209383610ccb565b8101031261083857519183610764565b3d9150610893565b90506020813d6020116108eb575b816108d360209383610ccb565b81010312610838575180151581036108385782610528565b3d91506108c6565b6040516313bd406b60e21b815260048101829052906020826024816001600160a01b0389165afa918215610844575f92610964575b50610180518051821015610950576020600193848060a01b0316918360051b010152016104e5565b634e487b7160e01b5f52603260045260245ffd5b61098691925060203d811161098d575b61097e8183610ccb565b810190610ced565b905f610928565b503d610974565b90506020813d6020116109be575b816109af60209383610ccb565b8101031261083857515f6104b2565b3d91506109a2565b6109df915060203d60201161098d5761097e8183610ccb565b5f610478565b6109fe915060203d60201161098d5761097e8183610ccb565b5f61043e565b610a26915060203d602011610a2c575b610a1e8183610ccb565b810190610d9f565b5f61040b565b503d610a14565b610a4c915060203d602011610a2c57610a1e8183610ccb565b5f6103d0565b610a6b915060203d60201161098d5761097e8183610ccb565b5f61038e565b610a93915060203d602011610a99575b610a8b8183610ccb565b810190610d7f565b5f61035b565b503d610a81565b610ab9915060203d602011610a9957610a8b8183610ccb565b5f61031f565b90506020813d602011610ae9575b81610ada60209383610ccb565b8101031261083857515f6102e4565b3d9150610acd565b90506020813d602011610b1b575b81610b0c60209383610ccb565b8101031261083857515f6102b2565b3d9150610aff565b506020813d602011610b64575b81610b3d60209383610ccb565b8101031261083857516001600160801b0381168103610838576001600160801b0390610278565b3d9150610b30565b90506020813d602011610b96575b81610b8760209383610ccb565b8101031261083857515f610248565b3d9150610b7a565b610bb7915060203d60201161098d5761097e8183610ccb565b5f610210565b9150916020813d602011610bf6575b81610bd960209383610ccb565b8101031261083857519160ff831683036108385760ff92916101b6565b3d9150610bcc565b610c1b9192503d805f833e610c138183610ccb565b810190610d0c565b905f610187565b610c3691503d805f833e610c138183610ccb565b5f610159565b610c55915060203d60201161098d5761097e8183610ccb565b5f61012c565b634e487b7160e01b5f52604160045260245ffd5b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b6080810190811067ffffffffffffffff821117610c5b57604052565b6060810190811067ffffffffffffffff821117610c5b57604052565b90601f8019910116810190811067ffffffffffffffff821117610c5b57604052565b9081602091031261083857516001600160a01b03811681036108385790565b6020818303126108385780519067ffffffffffffffff8211610838570181601f820112156108385780519067ffffffffffffffff8211610c5b5760405192610d5e601f8401601f191660200185610ccb565b8284526020838301011161083857815f9260208093018386015e8301015290565b90816020910312610838575167ffffffffffffffff811681036108385790565b9081602091031261083857516001600160601b03811681036108385790565b67ffffffffffffffff8111610c5b5760051b6020019056fea2646970667358221220a5f9796cca723b6237263e864be2d32cb3b061f8c28ede4ebf23880769c589dd64736f6c634300081b0033";
