export const abi = [
  {
    inputs: [
      {
        internalType: "contract IVaultV2",
        name: "vault",
        type: "address",
      },
      {
        internalType: "contract IMorphoVaultV1AdapterFactory",
        name: "morphoVaultV1AdapterFactory",
        type: "address",
      },
    ],
    name: "query",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "asset",
                type: "address",
              },
              {
                internalType: "string",
                name: "symbol",
                type: "string",
              },
              { internalType: "string", name: "name", type: "string" },
              {
                internalType: "uint256",
                name: "decimals",
                type: "uint256",
              },
            ],
            internalType: "struct Token",
            name: "token",
            type: "tuple",
          },
          { internalType: "address", name: "asset", type: "address" },
          {
            internalType: "uint256",
            name: "totalAssets",
            type: "uint256",
          },
          {
            internalType: "uint128",
            name: "_totalAssets",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "totalSupply",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "virtualShares",
            type: "uint256",
          },
          { internalType: "uint64", name: "maxRate", type: "uint64" },
          {
            internalType: "uint64",
            name: "lastUpdate",
            type: "uint64",
          },
          {
            internalType: "address[]",
            name: "adapters",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "liquidityAdapter",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "liquidityData",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "isLiquidityAdapterKnown",
            type: "bool",
          },
          {
            components: [
              { internalType: "bytes32", name: "id", type: "bytes32" },
              {
                internalType: "uint256",
                name: "absoluteCap",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "relativeCap",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "allocation",
                type: "uint256",
              },
            ],
            internalType: "struct VaultV2Allocation[]",
            name: "liquidityAllocations",
            type: "tuple[]",
          },
          {
            internalType: "uint96",
            name: "performanceFee",
            type: "uint96",
          },
          {
            internalType: "uint96",
            name: "managementFee",
            type: "uint96",
          },
          {
            internalType: "address",
            name: "performanceFeeRecipient",
            type: "address",
          },
          {
            internalType: "address",
            name: "managementFeeRecipient",
            type: "address",
          },
        ],
        internalType: "struct VaultV2Response",
        name: "res",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export const code =
  "0x60808060405234601557610f69908161001a8239f35b5f80fdfe60806040526004361015610011575f80fd5b5f3560e01c63f6f030ce14610024575f80fd5b3461085e57604036600319011261085e576004356001600160a01b038116810361085e576024356001600160a01b038116810361085e576102a060405260405161006d81610dca565b5f80825260606020808401829052604080850183905282850184905260809490945260a083905260c083905260e08390526101008390526101208390526101408390526101608390526101808290526101a08390526101c08290526101e0839052610200919091526102208290526102408290526102608290526102809190915290516338d52e0f60e01b815290816004816001600160a01b0387165afa90811561086a575f91610d73575b506040516395d89b4160e01b81525f816004816001600160a01b0388165afa90811561086a575f91610d59575b506040516306fdde0360e01b8152905f826004816001600160a01b0389165afa91821561086a575f92610d35575b5060405163313ce56760e01b8152916020836004816001600160a01b038a165afa91821561086a575f92610cf4575b60ff9350604051946101b486610dca565b60018060a01b03168552602085015260408401521660608201526080526040516338d52e0f60e01b815260208160048160018060a01b0387165afa90811561086a575f91610cd5575b506001600160a01b0390811660a0526040516278744560e21b8152906020908290600490829087165afa90811561086a575f91610ca3575b5060c05260405163ce04bebb60e01b81526020816004816001600160a01b0387165afa801561086a575f90610c5a575b6001600160801b031660e052506040516318160ddd60e01b81526020816004816001600160a01b0387165afa90811561086a575f91610c28575b50610100526040516331c6651b60e21b81526020816004816001600160a01b0387165afa90811561086a575f91610bf6575b506101205260405163ece1d6e560e01b81526020816004816001600160a01b0387165afa801561086a5767ffffffffffffffff915f91610bd7575b50166101405260405163c046371160e01b81526020816004816001600160a01b0387165afa801561086a5767ffffffffffffffff915f91610ba8575b50166101605260405163ad468d1160e01b81526020816004816001600160a01b0387165afa90811561086a575f91610b89575b506001600160a01b039081166101a0526040516305c0524560e31b8152905f908290600490829087165afa90811561086a575f91610b30575b506101c0526040516343bc43c160e11b81526020816004816001600160a01b0387165afa801561086a576001600160601b03915f91610b11575b50166102205260405163537bfaeb60e11b81526020816004816001600160a01b0387165afa801561086a576001600160601b03915f91610ae2575b50166102405260405163ed27f7c960e01b81526020816004816001600160a01b0387165afa90811561086a575f91610ac3575b506001600160a01b03908116610260526040516306d9a30160e41b8152906020908290600490829087165afa90811561086a575f91610aa4575b506001600160a01b0390811661028052604051630b54457960e31b8152906020908290600490829087165afa90811561086a575f91610a72575b506104da81610ee6565b6104e76040519182610de6565b818152601f196104f683610ee6565b01366020830137610180525f5b8181106109ec57604051632c77566560e01b81526001600160a01b0380861660048301528591906020908290602490829089165afa90811561086a575f916109b1575b506108d7575b61020051515f5b818110610763576040516020815280608051610220602083015260018060a01b0381511661024083015260606105b561059d602084015160806102608701526102c0860190610da6565b604084015185820361023f1901610280870152610da6565b9101516102a083015260018060a01b0360206080015116604083015260406080015160608301526001600160801b03606060800151166080830152608080015160a083015260a06080015160c083015267ffffffffffffffff60c0608001511660e083015267ffffffffffffffff60e060800151166101008301526101006080015190601f1983820301610120840152602080835192838152019201905f5b8181106107415750506101a0516001600160a01b0316610140840152506101c051828203601f190161016084015261068c9190610da6565b6101e051151561018083015261020051828203601f19016101a08401528051808352602092830192909101905f5b81811061070757505061022080516001600160601b039081166101c086015261024051166101e0850152610260516001600160a01b03908116610200860152610280511690840152500390f35b91935091602060806001926060875180518352848101518584015260408101516040840152015160608201520194019101918493926106ba565b82516001600160a01b0316845285945060209384019390920191600101610654565b6107738161018060800151610f1f565b518051604051632f0374dd60e21b815260048101919091529091906020816024816001600160a01b0389165afa90811561086a575f916108a6575b50602083015281516040519063a68bafa360e01b8252600482015260208160248160018060a01b0389165afa90811561086a575f91610875575b5060408301528151916040519263c69507dd60e01b8452600484015260208360248160018060a01b0389165afa92831561086a575f93610832575b50916060600193015201610553565b92506020833d8211610862575b8161084c60209383610de6565b8101031261085e579151916060610823565b5f80fd5b3d915061083f565b6040513d5f823e3d90fd5b90506020813d821161089e575b8161088f60209383610de6565b8101031261085e5751856107e8565b3d9150610882565b90506020813d82116108cf575b816108c060209383610de6565b8101031261085e5751856107ae565b3d91506108b3565b60016101e0526040805191906108ed8184610de6565b60018352601f1981015f5b81811061098457505061097e9192610180608001525f8151602081019083825260046060820152637468697360e01b608082015260018060a01b038616848201526080815261094860a082610de6565b5190209180519261095884610dca565b8352602083018290528201525f6060820152610200519061097882610efe565b52610efe565b5061054c565b602090835161099281610dca565b5f81525f838201525f858201525f6060820152828288010152016108f8565b90506020813d6020116109e4575b816109cc60209383610de6565b8101031261085e5751801515810361085e5782610546565b3d91506109bf565b6040516313bd406b60e21b815260048101829052906020826024816001600160a01b0389165afa801561086a576001925f91610a44575b50610a348261010060800151610f1f565b90838060a01b0316905201610503565b610a65915060203d8111610a6b575b610a5d8183610de6565b810190610e08565b5f610a23565b503d610a53565b90506020813d602011610a9c575b81610a8d60209383610de6565b8101031261085e57515f6104d0565b3d9150610a80565b610abd915060203d602011610a6b57610a5d8183610de6565b5f610496565b610adc915060203d602011610a6b57610a5d8183610de6565b5f61045c565b610b04915060203d602011610b0a575b610afc8183610de6565b810190610ec7565b5f610429565b503d610af2565b610b2a915060203d602011610b0a57610afc8183610de6565b5f6103ee565b3d9150815f823e610b418282610de6565b602081838101031261085e5780519067ffffffffffffffff821161085e57828101601f83830101121561085e576020610b839382019280830151920101610e27565b5f6103b4565b610ba2915060203d602011610a6b57610a5d8183610de6565b5f61037b565b610bca915060203d602011610bd0575b610bc28183610de6565b810190610ea7565b5f610348565b503d610bb8565b610bf0915060203d602011610bd057610bc28183610de6565b5f61030c565b90506020813d602011610c20575b81610c1160209383610de6565b8101031261085e57515f6102d1565b3d9150610c04565b90506020813d602011610c52575b81610c4360209383610de6565b8101031261085e57515f61029f565b3d9150610c36565b506020813d602011610c9b575b81610c7460209383610de6565b8101031261085e57516001600160801b038116810361085e576001600160801b0390610265565b3d9150610c67565b90506020813d602011610ccd575b81610cbe60209383610de6565b8101031261085e57515f610235565b3d9150610cb1565b610cee915060203d602011610a6b57610a5d8183610de6565b5f6101fd565b9150916020813d602011610d2d575b81610d1060209383610de6565b8101031261085e57519160ff8316830361085e5760ff92916101a3565b3d9150610d03565b610d529192503d805f833e610d4a8183610de6565b810190610e6d565b905f610174565b610d6d91503d805f833e610d4a8183610de6565b5f610146565b610d8c915060203d602011610a6b57610a5d8183610de6565b5f610119565b634e487b7160e01b5f52604160045260245ffd5b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b6080810190811067ffffffffffffffff821117610d9257604052565b90601f8019910116810190811067ffffffffffffffff821117610d9257604052565b9081602091031261085e57516001600160a01b038116810361085e5790565b92919267ffffffffffffffff8211610d925760405191610e51601f8201601f191660200184610de6565b82948184528183011161085e578281602093845f96015e010152565b60208183031261085e5780519067ffffffffffffffff821161085e57019080601f8301121561085e578151610ea492602001610e27565b90565b9081602091031261085e575167ffffffffffffffff8116810361085e5790565b9081602091031261085e57516001600160601b038116810361085e5790565b67ffffffffffffffff8111610d925760051b60200190565b805115610f0b5760200190565b634e487b7160e01b5f52603260045260245ffd5b8051821015610f0b5760209160051b01019056fea2646970667358221220fafe769fe30a76260d40f6eaff689b6d44993d433aac1643a95d1f0d20509b2264736f6c634300081b0033";
