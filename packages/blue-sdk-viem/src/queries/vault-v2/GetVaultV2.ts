export const abi = [
  {
    inputs: [
      {
        internalType: "contract IVaultV2",
        name: "vault",
        type: "address",
      },
      {
        internalType: "contract IMorphoVaultV1AdapterFactory",
        name: "morphoVaultV1AdapterFactory",
        type: "address",
      },
    ],
    name: "query",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "asset",
                type: "address",
              },
              {
                internalType: "string",
                name: "symbol",
                type: "string",
              },
              { internalType: "string", name: "name", type: "string" },
              {
                internalType: "uint256",
                name: "decimals",
                type: "uint256",
              },
            ],
            internalType: "struct Token",
            name: "token",
            type: "tuple",
          },
          { internalType: "address", name: "asset", type: "address" },
          {
            internalType: "uint256",
            name: "totalAssets",
            type: "uint256",
          },
          {
            internalType: "uint128",
            name: "_totalAssets",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "totalSupply",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "virtualShares",
            type: "uint256",
          },
          { internalType: "uint64", name: "maxRate", type: "uint64" },
          {
            internalType: "uint64",
            name: "lastUpdate",
            type: "uint64",
          },
          {
            internalType: "address[]",
            name: "adapters",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "liquidityAdapter",
            type: "address",
          },
          {
            internalType: "bool",
            name: "isLiquidityAdapterKnown",
            type: "bool",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "allocation",
                type: "uint256",
              },
              {
                internalType: "uint128",
                name: "absoluteCap",
                type: "uint128",
              },
              {
                internalType: "uint128",
                name: "relativeCap",
                type: "uint128",
              },
            ],
            internalType: "struct Caps",
            name: "liquidityCaps",
            type: "tuple",
          },
          {
            internalType: "uint96",
            name: "performanceFee",
            type: "uint96",
          },
          {
            internalType: "uint96",
            name: "managementFee",
            type: "uint96",
          },
          {
            internalType: "address",
            name: "performanceFeeRecipient",
            type: "address",
          },
          {
            internalType: "address",
            name: "managementFeeRecipient",
            type: "address",
          },
        ],
        internalType: "struct VaultV2Response",
        name: "res",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export const code =
  "0x60808060405234601557610e04908161001a8239f35b5f80fdfe60806040526004361015610011575f80fd5b5f3560e01c63f6f030ce14610024575f80fd5b34610830576040366003190112610830576004356001600160a01b0381168103610830576024356001600160a01b03811681036108305761028060405260405161006d81610c8b565b5f808252606060208301819052604080840182905281840183905260809390935260a082905260c082905260e0829052610100829052610120829052610140829052610160829052610180526101a08190526101c052516100cd81610ca7565b5f808252602080830182905260408084018390526101e0939093526102008290526102208290526102408290526102609190915290516338d52e0f60e01b815290816004816001600160a01b0387165afa90811561083c575f91610c34575b506040516395d89b4160e01b81525f816004816001600160a01b0388165afa90811561083c575f91610c1a575b506040516306fdde0360e01b8152905f826004816001600160a01b0389165afa91821561083c575f92610bf6575b5060405163313ce56760e01b8152916020836004816001600160a01b038a165afa91821561083c575f92610bb5575b60ff9350604051946101c786610c8b565b60018060a01b03168552602085015260408401521660608201526080526040516338d52e0f60e01b815260208160048160018060a01b0387165afa90811561083c575f91610b96575b506001600160a01b0390811660a0526040516278744560e21b8152906020908290600490829087165afa90811561083c575f91610b64575b5060c05260405163ce04bebb60e01b81526020816004816001600160a01b0387165afa801561083c575f90610b1b575b6001600160801b031660e052506040516318160ddd60e01b81526020816004816001600160a01b0387165afa90811561083c575f91610ae9575b50610100526040516331c6651b60e21b81526020816004816001600160a01b0387165afa90811561083c575f91610ab7575b506101205260405163ece1d6e560e01b81526020816004816001600160a01b0387165afa801561083c5767ffffffffffffffff915f91610a98575b50166101405260405163c046371160e01b81526020816004816001600160a01b0387165afa801561083c5767ffffffffffffffff915f91610a69575b50166101605260405163ad468d1160e01b81526020816004816001600160a01b0387165afa90811561083c575f91610a4a575b506001600160a01b039081166101a0526040516343bc43c160e11b8152906020908290600490829087165afa801561083c576001600160601b03915f91610a2b575b50166102005260405163537bfaeb60e11b81526020816004816001600160a01b0387165afa801561083c576001600160601b03915f916109fc575b50166102205260405163ed27f7c960e01b81526020816004816001600160a01b0387165afa90811561083c575f916109dd575b506001600160a01b03908116610240526040516306d9a30160e41b8152906020908290600490829087165afa90811561083c575f916109be575b506001600160a01b0390811661026052604051630b54457960e31b8152906020908290600490829087165afa90811561083c575f9161098c575b506104bc81610db6565b6104c96040519182610cc3565b818152601f196104d883610db6565b01366020830137610180525f5b8181106108eb57604051632c77566560e01b81526001600160a01b0380861660048301528591906020908290602490829089165afa90811561083c575f916108b0575b506106e5575b506040516020815280608051610240602083015260018060a01b03815116610260830152606061058a610572602084015160806102808701526102e0860190610c67565b604084015185820361025f19016102a0870152610c67565b9101516102c083015260018060a01b0360206080015116604083015260406080015160608301526001600160801b03606060800151166080830152608080015160a083015260a06080015160c083015267ffffffffffffffff60c0608001511660e083015267ffffffffffffffff60e060800151166101008301526101006080015190601f1983820301610120840152602080835192838152019201905f5b8181106106c35750506101a080516001600160a01b039081166101408601526101c0805115156101608701526101e08051805161018089015260208101516001600160801b0390811695890195909552604001519093169086015261020080516001600160601b03908116938701939093526102208051909316908601526102408051821692860192909252610260511690840152500390f35b82516001600160a01b0316845285945060209384019390920191600101610629565b60016101406080015260405160208101906040825260046060820152637468697360e01b60808201523060408201526080815261072360a082610cc3565b519020604051632f0374dd60e21b81526004810182905291906020836024816001600160a01b0386165afa92831561083c575f9361087c575b5060405163a68bafa360e01b815260048101829052906020826024816001600160a01b0387165afa91821561083c575f92610847575b5060405163c69507dd60e01b8152600481019190915291602090839060249082906001600160a01b03165afa91821561083c575f926107fd575b506001600160801b03809293604051946107e586610ca7565b85521660208401521660408201526101e0528061052e565b91506020823d602011610834575b8161081860209383610cc3565b81010312610830579051906001600160801b036107cc565b5f80fd5b3d915061080b565b6040513d5f823e3d90fd5b9091506020813d602011610874575b8161086360209383610cc3565b810103126108305751906020610792565b3d9150610856565b9092506020813d6020116108a8575b8161089860209383610cc3565b810103126108305751918361075c565b3d915061088b565b90506020813d6020116108e3575b816108cb60209383610cc3565b81010312610830575180151581036108305782610528565b3d91506108be565b6040516313bd406b60e21b815260048101829052906020826024816001600160a01b0389165afa91821561083c575f9261095c575b50610180518051821015610948576020600193848060a01b0316918360051b010152016104e5565b634e487b7160e01b5f52603260045260245ffd5b61097e91925060203d8111610985575b6109768183610cc3565b810190610ce5565b905f610920565b503d61096c565b90506020813d6020116109b6575b816109a760209383610cc3565b8101031261083057515f6104b2565b3d915061099a565b6109d7915060203d602011610985576109768183610cc3565b5f610478565b6109f6915060203d602011610985576109768183610cc3565b5f61043e565b610a1e915060203d602011610a24575b610a168183610cc3565b810190610d97565b5f61040b565b503d610a0c565b610a44915060203d602011610a2457610a168183610cc3565b5f6103d0565b610a63915060203d602011610985576109768183610cc3565b5f61038e565b610a8b915060203d602011610a91575b610a838183610cc3565b810190610d77565b5f61035b565b503d610a79565b610ab1915060203d602011610a9157610a838183610cc3565b5f61031f565b90506020813d602011610ae1575b81610ad260209383610cc3565b8101031261083057515f6102e4565b3d9150610ac5565b90506020813d602011610b13575b81610b0460209383610cc3565b8101031261083057515f6102b2565b3d9150610af7565b506020813d602011610b5c575b81610b3560209383610cc3565b8101031261083057516001600160801b0381168103610830576001600160801b0390610278565b3d9150610b28565b90506020813d602011610b8e575b81610b7f60209383610cc3565b8101031261083057515f610248565b3d9150610b72565b610baf915060203d602011610985576109768183610cc3565b5f610210565b9150916020813d602011610bee575b81610bd160209383610cc3565b8101031261083057519160ff831683036108305760ff92916101b6565b3d9150610bc4565b610c139192503d805f833e610c0b8183610cc3565b810190610d04565b905f610187565b610c2e91503d805f833e610c0b8183610cc3565b5f610159565b610c4d915060203d602011610985576109768183610cc3565b5f61012c565b634e487b7160e01b5f52604160045260245ffd5b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b6080810190811067ffffffffffffffff821117610c5357604052565b6060810190811067ffffffffffffffff821117610c5357604052565b90601f8019910116810190811067ffffffffffffffff821117610c5357604052565b9081602091031261083057516001600160a01b03811681036108305790565b6020818303126108305780519067ffffffffffffffff8211610830570181601f820112156108305780519067ffffffffffffffff8211610c535760405192610d56601f8401601f191660200185610cc3565b8284526020838301011161083057815f9260208093018386015e8301015290565b90816020910312610830575167ffffffffffffffff811681036108305790565b9081602091031261083057516001600160601b03811681036108305790565b67ffffffffffffffff8111610c535760051b6020019056fea26469706673582212205125f0278282518ae57473fff54c7fd290e702a161b1084800dbd2e24309e66e64736f6c634300081b0033";
