export const abi = [
  {
    inputs: [
      {
        internalType: "contract IMorphoMarketV1Adapter",
        name: "adapter",
        type: "address",
      },
    ],
    name: "query",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "parentVault",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "adapterId",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "skimRecipient",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address",
                name: "loanToken",
                type: "address",
              },
              {
                internalType: "address",
                name: "collateralToken",
                type: "address",
              },
              {
                internalType: "address",
                name: "oracle",
                type: "address",
              },
              { internalType: "address", name: "irm", type: "address" },
              {
                internalType: "uint256",
                name: "lltv",
                type: "uint256",
              },
            ],
            internalType: "struct MarketParams[]",
            name: "marketParamsList",
            type: "tuple[]",
          },
        ],
        internalType: "struct VaultV2MorphoMarketV1AdapterResponse",
        name: "res",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export const code =
  "0x60808060405234601557610539908161001a8239f35b5f80fdfe6080806040526004361015610012575f80fd5b5f3560e01c63d4fc9fc614610025575f80fd5b3461032d57602036600319011261032d576004356001600160a01b038116919082900361032d576080810181811067ffffffffffffffff82111761045d576040525f815260208101915f8352604082015f81526060830191606083526040516307f1b29b60e11b8152602081600481855afa908115610339575f91610423575b506001600160a01b03168452604051635fb86b0160e01b8152602081600481855afa908115610339575f916103f1575b50855260405163388af5b560e01b8152602081600481855afa908115610339575f916103b7575b506001600160a01b0316825260405163b045ff5b60e01b815290602082600481845afa918215610339575f92610383575b5061013c8296959493966104c3565b610149604051918261048d565b828152601f19610158846104c3565b015f5b81811061034457505083525f5b828110610226575050506040519384936020855260a085019360018060a01b03905116602086015251604085015260018060a01b03905116606084015251906080808401528151809152602060c084019201905f5b8181106101cb575050500390f35b825180516001600160a01b039081168652602082810151821681880152604080840151831690880152606080840151909216918701919091526080918201519186019190915286955060a090940193909201916001016101bd565b604096939495965190631f1a892160e11b825280600483015260a082602481865afa8015610339575f925f5f905f925f946102bc575b50928492600196926102b0956040519461027586610471565b60a08a901b8a900390811686529081166020860152908116604085015216606083015260808201528851906102aa83836104db565b526104db565b50019594939295610168565b95505050505060a0823d8211610331575b816102da60a0938361048d565b8101031261032d576102b081836102f26001956104af565b906102ff602082016104af565b9161030c604083016104af565b91608061031b606083016104af565b9101519197509094509290919061025c565b5f80fd5b3d91506102cd565b6040513d5f823e3d90fd5b602090604099969798995161035881610471565b5f81525f838201525f60408201525f60608201525f608082015282828601015201979695949761015b565b9091506020813d6020116103af575b8161039f6020938361048d565b8101031261032d5751905f61012d565b3d9150610392565b90506020813d6020116103e9575b816103d26020938361048d565b8101031261032d576103e3906104af565b5f6100fc565b3d91506103c5565b90506020813d60201161041b575b8161040c6020938361048d565b8101031261032d57515f6100d5565b3d91506103ff565b90506020813d602011610455575b8161043e6020938361048d565b8101031261032d5761044f906104af565b5f6100a5565b3d9150610431565b634e487b7160e01b5f52604160045260245ffd5b60a0810190811067ffffffffffffffff82111761045d57604052565b90601f8019910116810190811067ffffffffffffffff82111761045d57604052565b51906001600160a01b038216820361032d57565b67ffffffffffffffff811161045d5760051b60200190565b80518210156104ef5760209160051b010190565b634e487b7160e01b5f52603260045260245ffdfea2646970667358221220da1ba9c1046e4f4904b796a6a814e0594d6cadbd354b8a9dbf4e6c7f35b3f8a764736f6c634300081b0033";
