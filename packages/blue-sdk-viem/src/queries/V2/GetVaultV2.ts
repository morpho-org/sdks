export const abi = [
  {
    inputs: [
      {
        internalType: "contract IVaultV2",
        name: "vault",
        type: "address",
      },
    ],
    name: "query",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "asset",
                type: "address",
              },
              {
                internalType: "string",
                name: "symbol",
                type: "string",
              },
              { internalType: "string", name: "name", type: "string" },
              {
                internalType: "uint256",
                name: "decimals",
                type: "uint256",
              },
            ],
            internalType: "struct Token",
            name: "token",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "totalSupply",
            type: "uint256",
          },
          {
            internalType: "uint128",
            name: "totalAssets",
            type: "uint128",
          },
          { internalType: "address", name: "asset", type: "address" },
          {
            internalType: "uint96",
            name: "performanceFee",
            type: "uint96",
          },
          {
            internalType: "uint96",
            name: "managementFee",
            type: "uint96",
          },
          { internalType: "uint64", name: "maxRate", type: "uint64" },
          {
            internalType: "uint256",
            name: "virtualShares",
            type: "uint256",
          },
          {
            internalType: "uint64",
            name: "lastUpdate",
            type: "uint64",
          },
          {
            internalType: "address",
            name: "liquidityAdapter",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "adapters",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "performanceFeeRecipient",
            type: "address",
          },
          {
            internalType: "address",
            name: "managementFeeRecipient",
            type: "address",
          },
        ],
        internalType: "struct VaultV2Response",
        name: "res",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export const code =
  "0x60808060405234601557610a38908161001a8239f35b5f80fdfe6080806040526004361015610012575f80fd5b5f3560e01c63d4fc9fc614610025575f80fd5b34610632576020366003190112610632576004356001600160a01b0381169190829003610632576101a0810181811067ffffffffffffffff8211176108a357604052604051610073816108db565b5f815260606020820152606060408201525f6060820152815260208101915f835260408201905f8252606083015f8152608084015f815260a085015f815260c086015f815260e08701905f82526101008801925f84526101208901945f86526101408a0196606088526101608b01995f8b526101808c01995f8b526040516338d52e0f60e01b8152602081600481855afa9081156105fb575f91610884575b506040516395d89b4160e01b81525f81600481865afa9081156105fb575f9161086a575b506040516306fdde0360e01b8152905f82600481875afa9182156105fb575f92610846575b5060405163313ce56760e01b815291602083600481885afa9182156105fb575f92610805575b60ff935060405194610192866108db565b60018060a01b03168552602085015260408401521660608201528d526040516318160ddd60e01b8152602081600481855afa9081156105fb578f905f926107d1575b505260405163ce04bebb60e01b8152602081600481855afa80156105fb575f90610788575b6001600160801b03168352506040516338d52e0f60e01b8152602081600481855afa9081156105fb575f91610769575b506001600160a01b031683526040516343bc43c160e11b8152602081600481855afa80156105fb576001600160601b03915f9161074a575b5016845260405163537bfaeb60e11b8152602081600481855afa80156105fb576001600160601b03915f9161071b575b5016855260405163ece1d6e560e01b8152602081600481855afa80156105fb5767ffffffffffffffff915f916106fc575b501686526040516331c6651b60e21b8152602081600481855afa9081156105fb575f916106ca575b50875260405163c046371160e01b8152602081600481855afa80156105fb5767ffffffffffffffff915f9161069b575b5016885260405163ad468d1160e01b8152602081600481855afa9081156105fb575f9161067c575b506001600160a01b0316895260405163ed27f7c960e01b8152602081600481855afa9081156105fb575f9161065d575b506001600160a01b03168c526040516306d9a30160e41b8152602081600481855afa9081156105fb575f9161063e575b506001600160a01b03168b52604051630b54457960e31b815290602082600481845afa9182156105fb575f92610606575b506103dd826109ea565b6103ea60405191826108f7565b828152601f196103f9846109ea565b013660208301378b525f5b828110610565575050506040519c8d9c60208e52519d8e602082016101a09052600160a01b600190038151166101c083015260208101516101e08301608090526102408301610452916108b7565b9060400151906101bf198382030161020084015261046f916108b7565b9e606001519061022001525160408d0152516001600160801b031660608c0152600160a01b6001900390511660808b0152516001600160601b031660a08a0152516001600160601b031660c08901525167ffffffffffffffff1660e0880152516101008701525167ffffffffffffffff16610120860152600160a01b600190039051166101408501525191601f1984860301610160850152825194858152602001926020015f955b808710610542575050516001600160a01b039081166101808501529051166101a08301528190039150f35b81516001600160a01b031685526001969096019560209485019490910190610517565b6040516313bd406b60e21b81526004810182905290602082602481865afa9182156105fb575f926105cb575b508c5180518210156105b7576020600193848060a01b0316918360051b01015201610404565b634e487b7160e01b5f52603260045260245ffd5b6105ed91925060203d81116105f4575b6105e581836108f7565b810190610919565b905f610591565b503d6105db565b6040513d5f823e3d90fd5b9091506020813d602011610636575b81610622602093836108f7565b810103126106325751905f6103d3565b5f80fd5b3d9150610615565b610657915060203d6020116105f4576105e581836108f7565b5f6103a2565b610676915060203d6020116105f4576105e581836108f7565b5f610372565b610695915060203d6020116105f4576105e581836108f7565b5f610342565b6106bd915060203d6020116106c3575b6106b581836108f7565b8101906109ca565b5f61031a565b503d6106ab565b90506020813d6020116106f4575b816106e5602093836108f7565b8101031261063257515f6102ea565b3d91506106d8565b610715915060203d6020116106c3576106b581836108f7565b5f6102c2565b61073d915060203d602011610743575b61073581836108f7565b8101906109ab565b5f610291565b503d61072b565b610763915060203d6020116107435761073581836108f7565b5f610261565b610782915060203d6020116105f4576105e581836108f7565b5f610229565b506020813d6020116107c9575b816107a2602093836108f7565b8101031261063257516001600160801b0381168103610632576001600160801b03906101f9565b3d9150610795565b9150506020813d6020116107fd575b816107ed602093836108f7565b8101031261063257518e5f6101d4565b3d91506107e0565b9150916020813d60201161083e575b81610821602093836108f7565b8101031261063257519160ff831683036106325760ff9291610181565b3d9150610814565b6108639192503d805f833e61085b81836108f7565b810190610938565b905f61015b565b61087e91503d805f833e61085b81836108f7565b5f610136565b61089d915060203d6020116105f4576105e581836108f7565b5f610112565b634e487b7160e01b5f52604160045260245ffd5b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b6080810190811067ffffffffffffffff8211176108a357604052565b90601f8019910116810190811067ffffffffffffffff8211176108a357604052565b9081602091031261063257516001600160a01b03811681036106325790565b6020818303126106325780519067ffffffffffffffff8211610632570181601f820112156106325780519067ffffffffffffffff82116108a3576040519261098a601f8401601f1916602001856108f7565b8284526020838301011161063257815f9260208093018386015e8301015290565b9081602091031261063257516001600160601b03811681036106325790565b90816020910312610632575167ffffffffffffffff811681036106325790565b67ffffffffffffffff81116108a35760051b6020019056fea26469706673582212201bc210015760172cf07f06e156597b112f421d7d3fd980d17a3dbc60b6e6a49d64736f6c634300081b0033";
